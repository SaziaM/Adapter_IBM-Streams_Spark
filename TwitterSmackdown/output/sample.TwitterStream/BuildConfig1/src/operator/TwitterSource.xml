<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<operatorInstanceModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator/instance" xmlns:an="http://www.ibm.com/xmlns/prod/streams/spl/annotation" xmlns:tt="http://www.ibm.com/xmlns/prod/streams/spl/tupleType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <context>
    <kind>com.ibm.streamsx.inet.http::HTTPGetStream</kind>
    <class>TwitterSource</class>
    <operatorModelDirectory>/opt/ibm/InfoSphere_Streams/4.2.4.0/toolkits/spl/spl/utility/JavaOp</operatorModelDirectory>
    <applicationDirectory>/home/streamsadmin/workspace/TwitterSmackdown</applicationDirectory>
    <dataDirectory>/tmp</dataDirectory>
    <outputDirectory>/home/streamsadmin/workspace/TwitterSmackdown/output/sample.TwitterStream/BuildConfig1</outputDirectory>
    <toolkits>
      <toolkit isCurrentToolkit="false">
        <name>Smackdown</name>
        <rootDirectory>/home/streamsadmin/workspace/TwitterSmackdown</rootDirectory>
        <index>0</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>spl</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.4.0/toolkits/spl</rootDirectory>
        <index>1</index>
      </toolkit>
      <toolkit isCurrentToolkit="true">
        <name>com.ibm.streamsx.inet</name>
        <rootDirectory>/opt/ibm/InfoSphere_Streams/4.2.4.0/toolkits/com.ibm.streamsx.inet</rootDirectory>
        <index>2</index>
      </toolkit>
    </toolkits>
    <optimized>true</optimized>
    <verbose>false</verbose>
    <networkByteOrdering>false</networkByteOrdering>
    <codeBeautification>false</codeBeautification>
    <includes>
      <include>"../type/BeJwrMSw2SUksSQQADLECDn.h"</include>
    </includes>
    <stateVariables/>
    <runtimeConstants/>
    <sourceLocation>
      <file>sample/TwitterStream.spl</file>
      <line>22</line>
      <column>3</column>
    </sourceLocation>
    <productVersion>4.2.4.0</productVersion>
    <types>
      <type index="0" type="rstring"/>
      <type index="1" type="boolean"/>
      <type index="2" type="float64"/>
      <type index="3" type="int32"/>
    </types>
    <javaOperatorModelDirectory>/opt/ibm/InfoSphere_Streams/4.2.4.0/toolkits/com.ibm.streamsx.inet/com.ibm.streamsx.inet.http/HTTPGetStream</javaOperatorModelDirectory>
    <checkpointKind>none</checkpointKind>
  </context>

  <parameters>
    <parameter>
      <name>className</name>
      <values>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>SPL::rstring("com.ibm.streamsx.inet.http.HTTPStreamReader")</cppExpression>
          <splExpression>"com.ibm.streamsx.inet.http.HTTPStreamReader"</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>&lt;invalid&gt;</file>
            <line>-1</line>
            <column>0</column>
          </sourceLocation>
        </value>
      </values>
      <sourceLocation>
        <file>&lt;invalid&gt;</file>
        <line>-1</line>
        <column>0</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>classLibrary</name>
      <values>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>(SPL::Functions::Utility::getToolkitDirectory(SPL::rstring("com.ibm.streamsx.inet")) + SPL::rstring("/impl/lib/com.ibm.streamsx.inet.jar"))</cppExpression>
          <splExpression>getToolkitDirectory("com.ibm.streamsx.inet") + "/impl/lib/com.ibm.streamsx.inet.jar"</splExpression>
          <hasFunctions>true</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>&lt;invalid&gt;</file>
            <line>-1</line>
            <column>0</column>
          </sourceLocation>
          <expressionTree>
            <binary op="+" type="0">
              <lhs>
                <call fcn="getToolkitDirectory" type="0">
                  <args count="1">
                    <arg type="0">
                      <literal type="0">"com.ibm.streamsx.inet"</literal>
                    </arg>
                  </args>
                </call>
              </lhs>
              <rhs>
                <literal type="0">"/impl/lib/com.ibm.streamsx.inet.jar"</literal>
              </rhs>
            </binary>
          </expressionTree>
        </value>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>(SPL::Functions::Utility::getToolkitDirectory(SPL::rstring("com.ibm.streamsx.inet")) + SPL::rstring("/opt/downloaded/*"))</cppExpression>
          <splExpression>getToolkitDirectory("com.ibm.streamsx.inet") + "/opt/downloaded/*"</splExpression>
          <hasFunctions>true</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>&lt;invalid&gt;</file>
            <line>-1</line>
            <column>0</column>
          </sourceLocation>
          <expressionTree>
            <binary op="+" type="0">
              <lhs>
                <call fcn="getToolkitDirectory" type="0">
                  <args count="1">
                    <arg type="0">
                      <literal type="0">"com.ibm.streamsx.inet"</literal>
                    </arg>
                  </args>
                </call>
              </lhs>
              <rhs>
                <literal type="0">"/opt/downloaded/*"</literal>
              </rhs>
            </binary>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>&lt;invalid&gt;</file>
        <line>-1</line>
        <column>0</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>url</name>
      <values>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>SPL::rstring("https://stream.twitter.com/1.1/statuses/sample.json")</cppExpression>
          <splExpression>"https://stream.twitter.com/1.1/statuses/sample.json"</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>25</line>
            <column>11</column>
          </sourceLocation>
          <expressionTree>
            <literal type="0">"https://stream.twitter.com/1.1/statuses/sample.json"</literal>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>sample/TwitterStream.spl</file>
        <line>25</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>authenticationType</name>
      <values>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>SPL::rstring("oauth")</cppExpression>
          <splExpression>"oauth"</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>26</line>
            <column>26</column>
          </sourceLocation>
          <expressionTree>
            <literal type="0">"oauth"</literal>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>sample/TwitterStream.spl</file>
        <line>26</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>authenticationProperty</name>
      <values>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>(SPL::rstring("consumerKey=") + ::getSubmissionTimeValue(SPL::rstring("consumerKey")))</cppExpression>
          <splExpression>"consumerKey=" + getSubmissionTimeValue("consumerKey")</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>28</line>
            <column>6</column>
          </sourceLocation>
          <expressionTree>
            <binary op="+" type="0">
              <lhs>
                <literal type="0">"consumerKey="</literal>
              </lhs>
              <rhs>
                <call fcn="::getSubmissionTimeValue" type="0">
                  <args count="1">
                    <arg type="0">
                      <literal type="0">"consumerKey"</literal>
                    </arg>
                  </args>
                </call>
              </rhs>
            </binary>
          </expressionTree>
        </value>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>(SPL::rstring("consumerSecret=") + ::getSubmissionTimeValue(SPL::rstring("consumerSecret")))</cppExpression>
          <splExpression>"consumerSecret=" + getSubmissionTimeValue("consumerSecret")</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>29</line>
            <column>6</column>
          </sourceLocation>
          <expressionTree>
            <binary op="+" type="0">
              <lhs>
                <literal type="0">"consumerSecret="</literal>
              </lhs>
              <rhs>
                <call fcn="::getSubmissionTimeValue" type="0">
                  <args count="1">
                    <arg type="0">
                      <literal type="0">"consumerSecret"</literal>
                    </arg>
                  </args>
                </call>
              </rhs>
            </binary>
          </expressionTree>
        </value>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>(SPL::rstring("accessToken=") + ::getSubmissionTimeValue(SPL::rstring("accessToken")))</cppExpression>
          <splExpression>"accessToken=" + getSubmissionTimeValue("accessToken")</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>30</line>
            <column>6</column>
          </sourceLocation>
          <expressionTree>
            <binary op="+" type="0">
              <lhs>
                <literal type="0">"accessToken="</literal>
              </lhs>
              <rhs>
                <call fcn="::getSubmissionTimeValue" type="0">
                  <args count="1">
                    <arg type="0">
                      <literal type="0">"accessToken"</literal>
                    </arg>
                  </args>
                </call>
              </rhs>
            </binary>
          </expressionTree>
        </value>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>(SPL::rstring("accessTokenSecret=") + ::getSubmissionTimeValue(SPL::rstring("accessTokenSecret")))</cppExpression>
          <splExpression>"accessTokenSecret=" + getSubmissionTimeValue("accessTokenSecret")</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>31</line>
            <column>6</column>
          </sourceLocation>
          <expressionTree>
            <binary op="+" type="0">
              <lhs>
                <literal type="0">"accessTokenSecret="</literal>
              </lhs>
              <rhs>
                <call fcn="::getSubmissionTimeValue" type="0">
                  <args count="1">
                    <arg type="0">
                      <literal type="0">"accessTokenSecret"</literal>
                    </arg>
                  </args>
                </call>
              </rhs>
            </binary>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>sample/TwitterStream.spl</file>
        <line>27</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>retryOnClose</name>
      <values>
        <value>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>true</cppExpression>
          <splExpression>true</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>32</line>
            <column>20</column>
          </sourceLocation>
          <expressionTree>
            <literal type="1">true</literal>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>sample/TwitterStream.spl</file>
        <line>32</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>retryDelay</name>
      <values>
        <value>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>SPL::float64(60.0)</cppExpression>
          <splExpression>60</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>33</line>
            <column>18</column>
          </sourceLocation>
          <expressionTree>
            <literal type="2">60</literal>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>sample/TwitterStream.spl</file>
        <line>33</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>maxRetries</name>
      <values>
        <value>
          <cppType>SPL::int32</cppType>
          <splType>int32</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>SPL::int32(3600)</cppExpression>
          <splExpression>3600</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>34</line>
            <column>18</column>
          </sourceLocation>
          <expressionTree>
            <literal type="3">3600</literal>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>sample/TwitterStream.spl</file>
        <line>34</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>vmArg</name>
      <values>
        <value>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
          <hasRuntimeConstant>false</hasRuntimeConstant>
          <cppExpression>SPL::rstring("-Dcom.ibm.jsse2.overrideDefaultTLS=true")</cppExpression>
          <splExpression>"-Dcom.ibm.jsse2.overrideDefaultTLS=true"</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>Constant</parameterExpressionMode>
          <sourceLocation>
            <file>sample/TwitterStream.spl</file>
            <line>35</line>
            <column>12</column>
          </sourceLocation>
          <expressionTree>
            <literal type="0">"-Dcom.ibm.jsse2.overrideDefaultTLS=true"</literal>
          </expressionTree>
        </value>
      </values>
      <sourceLocation>
        <file>sample/TwitterStream.spl</file>
        <line>35</line>
        <column>5</column>
      </sourceLocation>
    </parameter>
  </parameters>

  <inputPorts/>

  <outputPorts>
    <outputPort>
      <index>0</index>
      <tupleCppName>oport$0</tupleCppName>
      <tupleCppType>SPL::BeJwrMSw2SUksSQQADLECDn</tupleCppType>
      <tupleSPLType>tuple&lt;rstring data&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>true</mutationAllowed>
      <sourceLocation>
        <file>sample/TwitterStream.spl</file>
        <line>22</line>
        <column>3</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>data</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="data" type="rstring"/>
      </tuple>
      <finalPunctuationPortScope/>
    </outputPort>
  </outputPorts>

</operatorInstanceModel>
